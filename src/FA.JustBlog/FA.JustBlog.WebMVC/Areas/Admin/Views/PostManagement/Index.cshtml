@model FA.JustBlog.Common.Paginated<FA.JustBlog.Models.Common.Post>

@{
    ViewBag.Title = "Post Management";
}

<h2 class="text-center">Post Management</h2>
<hr />
<div>
    <a href="@Url.Action("Create", "PostManagement")" class="btn btn-success">
        <i class="fas fa-plus"></i>
    </a>

    <form action="@Url.Action("Index", "PostManagement")" method="get" class="form-inline float-right">
        <div class="form-group mx-sm-3 mb-2">
            <input type="text" size="30" style="height:32px" class="form-control mr-3" id="inputSearch" name="SearchString" value="@ViewData["currentFilter"]" placeholder="Input String...">
            <button type="submit" class="btn btn-danger">
                <i class="fas fa-search"></i>
                Search
            </button>
            <a href="@Url.Action("Index")" class="btn btn-warning ml-1" style="height:38px">
                <span style="font-size: 1.25em; color: rebeccapurple; width: 40px;">
                    <i class="w3-spin fa fa-refresh"></i>
                </span>
            </a>
        </div>
    </form>
</div>

@if (!Model.Any())
{
    <h3 class="text-center">Don't have a post yet.</h3>
}
else
{
    <table class="table table-condensed table-bordered">
        <tr class="d-flex">
            <th class="col-md-2">
                <a href="@Url.Action("Index", "PostManagement", new { sortOrder = ViewData["TitleSortParm"], currentFilter = ViewData["CurrentFilter"] })">Title</a>
            </th>
            <th class="col-md-2">
                <a href="@Url.Action("Index", "PostManagement", new { sortOrder = ViewData["UrlSlugSortParm"], currentFilter = ViewData["CurrentFilter"] })">Url Slug</a>
            </th>
            <th class="col-md-2">
                <a href="@Url.Action("Index", "PostManagement", new { sortOrder = ViewData["PublishedSortParm"], currentFilter = ViewData["CurrentFilter"] })">Published</a>
            </th>
            <th class="col-md-2">
                <a href="@Url.Action("Index", "PostManagement", new { sortOrder = ViewData["PubLishedDateSortParm"], currentFilter = ViewData["CurrentFilter"] })">PublishedDate</a>
            </th>
            <th class="col-md-2">
                <a href="@Url.Action("Index", "PostManagement", new { sortOrder = ViewData["UpdatedAtSortParm"], currentFilter = ViewData["CurrentFilter"] })">Updated At</a>
            </th>
            <th class="col-md-2">Manage</th>
        </tr>

        @foreach (var post in Model)
        {
            <tr class="d-flex">
                <td class="col-md-2">
                    <a href="@Url.Action("Details", new { id = post.Id})">
                        @post.Title
                    </a>
                </td>
                <td class="col-md-2">
                    @post.UrlSlug
                </td>
                <td class="col-md-2">
                    @post.Published
                </td>
                <td class="col-md-2">
                    @post.PublishedDate
                </td>
                <td class="col-md-2">
                    @post.UpdatedAt
                </td>
                <td class="col-md-2">
                    <form action="@Url.Action("Delete", "PostManagement", new{ id = post.Id })" method="post">
                        <a href="@Url.Action("Edit", "PostManagement", new { id = post.Id})" class="btn btn-info ml-3">
                            <span style="font-size: 1.5em; color: #ff006e">
                                <i class="fas fa-edit"></i>
                            </span>
                        </a>
                        <button type="submit" onclick="return confirm('Are you sure to delete this post?');" class="btn btn-info ml-3">
                            <span style="font-size: 1.5em; color: #ff006e;">
                                <i class="fas fa-trash"></i>
                            </span>
                        </button>
                    </form>
                </td>
            </tr>
        }
    </table>

    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                ViewBag.PageRange = 3;
            }
            <li class="page-item">
                <a href="@Url.Action("Index", "PostManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=1, currentFilter=ViewData["CurrentFilter"] })"
                   class="btn page-link @prevDisabled"><<</a>
            <li class="page-item">
                <a href="@Url.Action("Index", "PostManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=(Model.PageIndex - 1 <= 0 ? 1 : Model.PageIndex - 1), currentFilter=ViewData["CurrentFilter"] })"
                   class="btn page-link @prevDisabled"><</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i >= Model.PageIndex - ViewBag.PageRange && i <= Model.PageIndex + ViewBag.PageRange)
                {
                    <li class="page-item">
                        <a class="@(i==Model.PageIndex ? "Current" : "") page-link"
                           href="@Url.Action("Index", "PostManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=i, currentFilter=ViewData["CurrentFilter"] })">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a href="@Url.Action("Index", "PostManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=(Model.PageIndex + 1 > Model.TotalPages ? Model.TotalPages : Model.PageIndex + 1), currentFilter=ViewData["CurrentFilter"] })"
                   class="btn page-link @nextDisabled">></a>
            <li class="page-item">
                <a href="@Url.Action("Index", "PostManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=(Model.TotalPages), currentFilter=ViewData["CurrentFilter"] })"
                   class="btn page-link @nextDisabled">>></a>
        </ul>
    </nav>
}
